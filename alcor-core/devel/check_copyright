


function join {
    local IFS="$1"
    shift
    echo "$*"
}

readonly REMOTE=$(git branch -vv | grep -e "^\*" | sed -e "s/ \+/ /g" | awk '{ print $4 }' | grep "\[" | tr -d ":[]")

if [ -z "$REMOTE" ]
then
    echo check_copyright: failed to get remote branch
    exit 1
fi

COMMITS=$(git log --pretty=format:'%h' ${REMOTE}..HEAD)

if [ -z "$COMMITS" ]
then
    echo check_copyright: there are no commits to check
    exit 0
fi

for commit in $(echo $COMMITS | tac -s " ")
do
    FILES=$(git diff-tree --no-commit-id --name-only -r $commit)

    if [ -z "$FILES" ]
    then
	echo check_copyright: commit \"$commit\" has no files to check
    else
	# for each file, check if it is in the 'lib' or 'src' dirs
	# and, if so, check the copyright
	for file in $FILES
	do
	    DIR=$(echo $file | cut -d "/" -f 1)

	    if [ "$DIR" = lib -o "$DIR" = src ]
	    then
		COPYRIGHT=$(grep "Copyright (C)" $file)
		YEAR=$(date +%G)

		if [ -z "$COPYRIGHT" ]
		then
		    echo check_copyright: commit \"$commit\" misses \
			copyright for \"$file\"
		elif ! echo $COPYRIGHT | grep -o $YEAR > /dev/null
		then
		    echo check_copyright: commit \"$commit\" misses \
			\"$YEAR\" copyright for \"$file\"
		fi
	    fi
	done
    fi
done
